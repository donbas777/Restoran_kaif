# Опис бекенду ресторану "La Riviera"

## Технології та фреймворки

- **Python 3.12** - основна мова програмування
- **Django 5.0** - веб-фреймворк для розробки
- **SQLite** - база даних (для розробки)
- **Pillow** - бібліотека для роботи з зображеннями
- **python-dotenv** - для роботи з змінними середовища

## Структура проекту

### Основний проект (la_riviera)
- **settings.py** - налаштування проекту
- **urls.py** - головні URL-маршрути
- **wsgi.py** - інтерфейс для розгортання

### Додатки (apps)

#### Core
- Базовий додаток для загальних функцій
- Відповідає за головну сторінку, сторінку "Про нас", контакти
- Містить моделі для команди ресторану та відгуків

#### Menu
- Управління меню ресторану
- Містить моделі для категорій та страв
- Відображення меню та деталей страв

#### Reservation
- Система бронювання столиків
- Містить моделі для столиків та бронювань
- Форма бронювання з валідацією

#### Events
- Управління подіями та акціями ресторану
- Містить моделі для подій та спеціальних пропозицій
- Відображення списку подій та деталей

#### Order
- Система онлайн-замовлень
- Містить моделі для кошика, елементів кошика та замовлень
- Процес оформлення замовлення

## Моделі даних

### Core
- **Contact** - зберігає повідомлення з контактної форми
- **TeamMember** - інформація про членів команди ресторану
- **Testimonial** - відгуки клієнтів

### Menu
- **Category** - категорії страв (закуски, основні страви, десерти тощо)
- **Dish** - страви з описом, ціною, зображенням та іншими атрибутами

### Reservation
- **Table** - столики ресторану з номером, місткістю та розташуванням
- **Reservation** - бронювання столиків з датою, часом, кількістю гостей

### Events
- **Event** - події ресторану з датою, часом, описом та ціною
- **Promotion** - спеціальні пропозиції та акції з відсотком знижки

### Order
- **Cart** - кошик для замовлення
- **CartItem** - елементи в кошику (страви та їх кількість)
- **Order** - оформлене замовлення з контактною інформацією
- **OrderItem** - елементи замовлення

## Представлення (Views)

### Типи представлень
- **Class-based views** - для більшості функціональності
- **Function-based views** - для простих операцій

### Основні представлення
- **HomeView** - головна сторінка з контекстними даними
- **AboutView** - сторінка "Про нас"
- **ContactView** - контактна форма
- **MenuListView** - список категорій та страв
- **DishDetailView** - деталі страви
- **ReservationFormView** - форма бронювання
- **EventListView** - список подій
- **EventDetailView** - деталі події
- **CartView** - перегляд кошика
- **CheckoutView** - оформлення замовлення

## URL-маршрути

- **/** - головна сторінка
- **/about/** - сторінка "Про нас"
- **/contact/** - контактна сторінка
- **/menu/** - сторінка меню
- **/menu/dish/<id>/** - деталі страви
- **/reservation/** - форма бронювання
- **/events/** - список подій
- **/events/<id>/** - деталі події
- **/cart/** - кошик
- **/checkout/** - оформлення замовлення
- **/admin/** - адміністративна панель

## Адміністративна панель

- Налаштована для управління всіма моделями
- Кастомізовані списки та форми для зручного управління
- Фільтри, пошук та сортування для ефективної роботи
- Можливість додавати, редагувати та видаляти всі об'єкти

## Безпека

- CSRF-захист для всіх форм
- Валідація введених даних
- Захист від SQL-ін'єкцій (через ORM Django)
- Налаштування дозволів для різних типів користувачів

## Обробка статичних та медіа-файлів

- **Static files** - CSS, JavaScript, зображення для дизайну
- **Media files** - завантажені зображення (страви, події, команда)
- Налаштування для розробки та продакшн-середовища

## Middleware

- Стандартні middleware Django для сесій, аутентифікації, CSRF
- Додаткові middleware для кастомної функціональності

## Форми

- **ContactForm** - для зворотного зв'язку
- **ReservationForm** - для бронювання столиків
- **CheckoutForm** - для оформлення замовлення

## Система шаблонів

- Використання шаблонного двигуна Django
- Базовий шаблон з блоками для наслідування
- Включення та наслідування шаблонів
- Фільтри та теги для форматування даних
